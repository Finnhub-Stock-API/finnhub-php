<?php
/**
 * ETFProfileData
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Finnhub
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Finnhub\Model;

use \ArrayAccess;
use \Finnhub\ObjectSerializer;

/**
 * ETFProfileData Class Doc Comment
 *
 * @category Class
 * @package  Finnhub
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ETFProfileData implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ETFProfileData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'name' => 'string',
        'asset_class' => 'string',
        'investment_segment' => 'string',
        'aum' => 'float',
        'nav' => 'float',
        'nav_currency' => 'string',
        'expense_ratio' => 'float',
        'tracking_index' => 'string',
        'etf_company' => 'string',
        'domicile' => 'string',
        'inception_date' => '\DateTime',
        'website' => 'string',
        'isin' => 'string',
        'cusip' => 'string',
        'price_to_earnings' => 'float',
        'price_to_book' => 'float',
        'avg_volume' => 'float',
        'description' => 'string',
        'is_inverse' => 'bool',
        'is_leveraged' => 'bool',
        'leverage_factor' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'name' => null,
        'asset_class' => null,
        'investment_segment' => null,
        'aum' => 'float',
        'nav' => 'float',
        'nav_currency' => null,
        'expense_ratio' => 'float',
        'tracking_index' => null,
        'etf_company' => null,
        'domicile' => null,
        'inception_date' => 'date',
        'website' => null,
        'isin' => null,
        'cusip' => null,
        'price_to_earnings' => 'float',
        'price_to_book' => 'float',
        'avg_volume' => 'float',
        'description' => null,
        'is_inverse' => null,
        'is_leveraged' => null,
        'leverage_factor' => 'float'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'name' => 'name',
        'asset_class' => 'assetClass',
        'investment_segment' => 'investmentSegment',
        'aum' => 'aum',
        'nav' => 'nav',
        'nav_currency' => 'navCurrency',
        'expense_ratio' => 'expenseRatio',
        'tracking_index' => 'trackingIndex',
        'etf_company' => 'etfCompany',
        'domicile' => 'domicile',
        'inception_date' => 'inceptionDate',
        'website' => 'website',
        'isin' => 'isin',
        'cusip' => 'cusip',
        'price_to_earnings' => 'priceToEarnings',
        'price_to_book' => 'priceToBook',
        'avg_volume' => 'avgVolume',
        'description' => 'description',
        'is_inverse' => 'isInverse',
        'is_leveraged' => 'isLeveraged',
        'leverage_factor' => 'leverageFactor'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'name' => 'setName',
        'asset_class' => 'setAssetClass',
        'investment_segment' => 'setInvestmentSegment',
        'aum' => 'setAum',
        'nav' => 'setNav',
        'nav_currency' => 'setNavCurrency',
        'expense_ratio' => 'setExpenseRatio',
        'tracking_index' => 'setTrackingIndex',
        'etf_company' => 'setEtfCompany',
        'domicile' => 'setDomicile',
        'inception_date' => 'setInceptionDate',
        'website' => 'setWebsite',
        'isin' => 'setIsin',
        'cusip' => 'setCusip',
        'price_to_earnings' => 'setPriceToEarnings',
        'price_to_book' => 'setPriceToBook',
        'avg_volume' => 'setAvgVolume',
        'description' => 'setDescription',
        'is_inverse' => 'setIsInverse',
        'is_leveraged' => 'setIsLeveraged',
        'leverage_factor' => 'setLeverageFactor'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'name' => 'getName',
        'asset_class' => 'getAssetClass',
        'investment_segment' => 'getInvestmentSegment',
        'aum' => 'getAum',
        'nav' => 'getNav',
        'nav_currency' => 'getNavCurrency',
        'expense_ratio' => 'getExpenseRatio',
        'tracking_index' => 'getTrackingIndex',
        'etf_company' => 'getEtfCompany',
        'domicile' => 'getDomicile',
        'inception_date' => 'getInceptionDate',
        'website' => 'getWebsite',
        'isin' => 'getIsin',
        'cusip' => 'getCusip',
        'price_to_earnings' => 'getPriceToEarnings',
        'price_to_book' => 'getPriceToBook',
        'avg_volume' => 'getAvgVolume',
        'description' => 'getDescription',
        'is_inverse' => 'getIsInverse',
        'is_leveraged' => 'getIsLeveraged',
        'leverage_factor' => 'getLeverageFactor'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['name'] = $data['name'] ?? null;
        $this->container['asset_class'] = $data['asset_class'] ?? null;
        $this->container['investment_segment'] = $data['investment_segment'] ?? null;
        $this->container['aum'] = $data['aum'] ?? null;
        $this->container['nav'] = $data['nav'] ?? null;
        $this->container['nav_currency'] = $data['nav_currency'] ?? null;
        $this->container['expense_ratio'] = $data['expense_ratio'] ?? null;
        $this->container['tracking_index'] = $data['tracking_index'] ?? null;
        $this->container['etf_company'] = $data['etf_company'] ?? null;
        $this->container['domicile'] = $data['domicile'] ?? null;
        $this->container['inception_date'] = $data['inception_date'] ?? null;
        $this->container['website'] = $data['website'] ?? null;
        $this->container['isin'] = $data['isin'] ?? null;
        $this->container['cusip'] = $data['cusip'] ?? null;
        $this->container['price_to_earnings'] = $data['price_to_earnings'] ?? null;
        $this->container['price_to_book'] = $data['price_to_book'] ?? null;
        $this->container['avg_volume'] = $data['avg_volume'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['is_inverse'] = $data['is_inverse'] ?? null;
        $this->container['is_leveraged'] = $data['is_leveraged'] ?? null;
        $this->container['leverage_factor'] = $data['leverage_factor'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets asset_class
     *
     * @return string|null
     */
    public function getAssetClass()
    {
        return $this->container['asset_class'];
    }

    /**
     * Sets asset_class
     *
     * @param string|null $asset_class Asset Class.
     *
     * @return self
     */
    public function setAssetClass($asset_class)
    {
        $this->container['asset_class'] = $asset_class;

        return $this;
    }

    /**
     * Gets investment_segment
     *
     * @return string|null
     */
    public function getInvestmentSegment()
    {
        return $this->container['investment_segment'];
    }

    /**
     * Sets investment_segment
     *
     * @param string|null $investment_segment Investment Segment.
     *
     * @return self
     */
    public function setInvestmentSegment($investment_segment)
    {
        $this->container['investment_segment'] = $investment_segment;

        return $this;
    }

    /**
     * Gets aum
     *
     * @return float|null
     */
    public function getAum()
    {
        return $this->container['aum'];
    }

    /**
     * Sets aum
     *
     * @param float|null $aum AUM.
     *
     * @return self
     */
    public function setAum($aum)
    {
        $this->container['aum'] = $aum;

        return $this;
    }

    /**
     * Gets nav
     *
     * @return float|null
     */
    public function getNav()
    {
        return $this->container['nav'];
    }

    /**
     * Sets nav
     *
     * @param float|null $nav NAV.
     *
     * @return self
     */
    public function setNav($nav)
    {
        $this->container['nav'] = $nav;

        return $this;
    }

    /**
     * Gets nav_currency
     *
     * @return string|null
     */
    public function getNavCurrency()
    {
        return $this->container['nav_currency'];
    }

    /**
     * Sets nav_currency
     *
     * @param string|null $nav_currency NAV currency.
     *
     * @return self
     */
    public function setNavCurrency($nav_currency)
    {
        $this->container['nav_currency'] = $nav_currency;

        return $this;
    }

    /**
     * Gets expense_ratio
     *
     * @return float|null
     */
    public function getExpenseRatio()
    {
        return $this->container['expense_ratio'];
    }

    /**
     * Sets expense_ratio
     *
     * @param float|null $expense_ratio Expense ratio. For non-US funds, this is the <a href=\"https://www.esma.europa.eu/sites/default/files/library/2015/11/09_1028_final_kid_ongoing_charges_methodology_for_publication_u_2_.pdf\" target=\"_blank\">KID ongoing charges<a/>.
     *
     * @return self
     */
    public function setExpenseRatio($expense_ratio)
    {
        $this->container['expense_ratio'] = $expense_ratio;

        return $this;
    }

    /**
     * Gets tracking_index
     *
     * @return string|null
     */
    public function getTrackingIndex()
    {
        return $this->container['tracking_index'];
    }

    /**
     * Sets tracking_index
     *
     * @param string|null $tracking_index Tracking Index.
     *
     * @return self
     */
    public function setTrackingIndex($tracking_index)
    {
        $this->container['tracking_index'] = $tracking_index;

        return $this;
    }

    /**
     * Gets etf_company
     *
     * @return string|null
     */
    public function getEtfCompany()
    {
        return $this->container['etf_company'];
    }

    /**
     * Sets etf_company
     *
     * @param string|null $etf_company ETF issuer.
     *
     * @return self
     */
    public function setEtfCompany($etf_company)
    {
        $this->container['etf_company'] = $etf_company;

        return $this;
    }

    /**
     * Gets domicile
     *
     * @return string|null
     */
    public function getDomicile()
    {
        return $this->container['domicile'];
    }

    /**
     * Sets domicile
     *
     * @param string|null $domicile ETF domicile.
     *
     * @return self
     */
    public function setDomicile($domicile)
    {
        $this->container['domicile'] = $domicile;

        return $this;
    }

    /**
     * Gets inception_date
     *
     * @return \DateTime|null
     */
    public function getInceptionDate()
    {
        return $this->container['inception_date'];
    }

    /**
     * Sets inception_date
     *
     * @param \DateTime|null $inception_date Inception date.
     *
     * @return self
     */
    public function setInceptionDate($inception_date)
    {
        $this->container['inception_date'] = $inception_date;

        return $this;
    }

    /**
     * Gets website
     *
     * @return string|null
     */
    public function getWebsite()
    {
        return $this->container['website'];
    }

    /**
     * Sets website
     *
     * @param string|null $website ETF's website.
     *
     * @return self
     */
    public function setWebsite($website)
    {
        $this->container['website'] = $website;

        return $this;
    }

    /**
     * Gets isin
     *
     * @return string|null
     */
    public function getIsin()
    {
        return $this->container['isin'];
    }

    /**
     * Sets isin
     *
     * @param string|null $isin ISIN.
     *
     * @return self
     */
    public function setIsin($isin)
    {
        $this->container['isin'] = $isin;

        return $this;
    }

    /**
     * Gets cusip
     *
     * @return string|null
     */
    public function getCusip()
    {
        return $this->container['cusip'];
    }

    /**
     * Sets cusip
     *
     * @param string|null $cusip CUSIP.
     *
     * @return self
     */
    public function setCusip($cusip)
    {
        $this->container['cusip'] = $cusip;

        return $this;
    }

    /**
     * Gets price_to_earnings
     *
     * @return float|null
     */
    public function getPriceToEarnings()
    {
        return $this->container['price_to_earnings'];
    }

    /**
     * Sets price_to_earnings
     *
     * @param float|null $price_to_earnings P/E.
     *
     * @return self
     */
    public function setPriceToEarnings($price_to_earnings)
    {
        $this->container['price_to_earnings'] = $price_to_earnings;

        return $this;
    }

    /**
     * Gets price_to_book
     *
     * @return float|null
     */
    public function getPriceToBook()
    {
        return $this->container['price_to_book'];
    }

    /**
     * Sets price_to_book
     *
     * @param float|null $price_to_book P/B.
     *
     * @return self
     */
    public function setPriceToBook($price_to_book)
    {
        $this->container['price_to_book'] = $price_to_book;

        return $this;
    }

    /**
     * Gets avg_volume
     *
     * @return float|null
     */
    public function getAvgVolume()
    {
        return $this->container['avg_volume'];
    }

    /**
     * Sets avg_volume
     *
     * @param float|null $avg_volume 30-day average volume.
     *
     * @return self
     */
    public function setAvgVolume($avg_volume)
    {
        $this->container['avg_volume'] = $avg_volume;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description ETF's description.
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets is_inverse
     *
     * @return bool|null
     */
    public function getIsInverse()
    {
        return $this->container['is_inverse'];
    }

    /**
     * Sets is_inverse
     *
     * @param bool|null $is_inverse Whether the ETF is inverse
     *
     * @return self
     */
    public function setIsInverse($is_inverse)
    {
        $this->container['is_inverse'] = $is_inverse;

        return $this;
    }

    /**
     * Gets is_leveraged
     *
     * @return bool|null
     */
    public function getIsLeveraged()
    {
        return $this->container['is_leveraged'];
    }

    /**
     * Sets is_leveraged
     *
     * @param bool|null $is_leveraged Whether the ETF is leveraged
     *
     * @return self
     */
    public function setIsLeveraged($is_leveraged)
    {
        $this->container['is_leveraged'] = $is_leveraged;

        return $this;
    }

    /**
     * Gets leverage_factor
     *
     * @return float|null
     */
    public function getLeverageFactor()
    {
        return $this->container['leverage_factor'];
    }

    /**
     * Sets leverage_factor
     *
     * @param float|null $leverage_factor Leverage factor.
     *
     * @return self
     */
    public function setLeverageFactor($leverage_factor)
    {
        $this->container['leverage_factor'] = $leverage_factor;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


